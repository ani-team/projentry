{"version":3,"sources":["../../index.ts","shared/rpc/index.ts","pages/index.tsx","pages/hooks.ts","app/hocs/with-router.tsx","app/hocs/index.ts","app/index.tsx","reportWebVitals.ts","index.tsx","shared/lib/dom/index.ts","shared/lib/alert/index.ts","shared/lib/string/index.ts","shared/lib/requests/index.ts","shared/config/paths.ts","shared/config/index.ts"],"names":["rpc","SocketRpc","window","console","log","configs","getPackageJson","then","BoardPage","lazy","TopicPage","HealthPages","TechPages","DocsPages","Routing","history","useHistory","prev","useRef","useEffect","unlisten","listen","location","current","pathname","dom","scrollToTop","useResetScrollAtEveryPage","exact","path","component","to","withRouter","fallback","delay","className","size","ReactRouterRoute","Route","withHocs","compose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","useTitle","title","useProjectTitle","PROJECT_NAME","querySelector","scrollTo","top","behavior","generateOpener","type","message","description","notification","open","placement","capitalize","term","charAt","toUpperCase","slice","textOverflow","limit","length","slugize","toLowerCase","replace","unslugize","toPascalCase","includes","split","map","s","join","toCamelCase","pascalCase","cache","useRequest","resolver","key","debounce","useState","data","setData","loading","setLoading","debouncedLoading","setDebouncedLoading","debounceLoading","setTimeout","response","clearTimeout","catch","PATHS","CODE","AUTH_HOOK","STYLES_1","TASK_DETAILS","DOCS","SETUP_ENV","DEV_GUIDE","PAGES","FEATURES","CODE_STYLE","STANDS","CODEGEN","docs","getStarted","paths","conventions","faq","issuesTypes","icon","tag","severity","visibleLinesDelta","issues","types","getIssueIcon","AntdIcon","findIssue","issueTag","find"],"mappings":"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","file":"static/js/main.a86bc527.chunk.js","sourcesContent":["import { io } from \"socket.io-client\";\nconst PROP = Symbol.for(\"RPC_PROP\");\nconst CACHE = Symbol.for(\"RPC_CACHE\");\nexport default function (hostString, socketParams, timeout = 15000) {\n    const socket = io(hostString, socketParams);\n    const target = {\n        $socket: socket,\n        [PROP]: [],\n        [CACHE]: new Map(),\n    };\n    const target2 = Object.assign(() => { }, target);\n    const proxyHandler = {\n        get: function (target, prop) {\n            if (typeof prop === \"symbol\" || prop.startsWith(\"$\"))\n                return target[prop];\n            const propString = [...target[PROP], prop].join(\".\");\n            if (target[CACHE].has(propString)) {\n                return target[CACHE].get(propString);\n            }\n            const proxy = createRpcProxy(target, [...target[PROP], prop]);\n            target[CACHE].set(propString, proxy);\n            return proxy;\n        },\n        apply(target, thisArg, argArray) {\n            if (target[PROP].length === 0)\n                throw new TypeError(\"rpc should not be called\");\n            return new Promise((resolve, reject) => {\n                const timer = setTimeout(() => reject(new Error(\"RPC Request is timed out\")), timeout);\n                socket.emit(\"socket-rpc\", target[PROP], argArray, (result, error) => {\n                    clearTimeout(timer);\n                    if (error)\n                        reject(error);\n                    else\n                        resolve(result);\n                });\n            });\n        },\n    };\n    function createRpcProxy(target, prop) {\n        return new Proxy(Object.assign(() => { }, target, { [PROP]: prop }), proxyHandler);\n    }\n    return createRpcProxy(target2, []);\n}\n//# sourceMappingURL=index.js.map","import SocketRpc from \"@projentry/client-rpc\";\nimport { Rpc } from \"@projentry/server/dist/rpc/types\";\n\nconst rpc = SocketRpc<Rpc>(\"http://localhost:8082\");\n(window as any).rpc = rpc;\n// eslint-disable-next-line no-console\nconsole.log(\n    \"%c> rpc.configs.getPackageJson().then(console.log)\",\n    \"line-height: 22px; font: 16px monospace; color: rgb(10 60 233 / 77%);\",\n);\n// eslint-disable-next-line no-console\nrpc.configs.getPackageJson().then(console.log);\nexport default rpc;\n","import { lazy } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport { useResetScrollAtEveryPage } from \"./hooks\";\n\nconst BoardPage = lazy(() => import(\"./board\"));\nconst TopicPage = lazy(() => import(\"./topic\"));\nconst HealthPages = lazy(() => import(\"./health\"));\nconst TechPages = lazy(() => import(\"./tech\"));\nconst DocsPages = lazy(() => import(\"./docs\"));\n\nconst Routing = () => {\n    useResetScrollAtEveryPage();\n\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={BoardPage} />\n            <Route path=\"/health\" component={HealthPages} />\n            <Route path=\"/tech\" component={TechPages} />\n            <Route path=\"/docs\" component={DocsPages} />\n            <Route exact path=\"/explorer\" component={TopicPage} />\n            <Redirect to=\"/\" />\n        </Switch>\n    );\n};\n\nexport default Routing;\n","import { useEffect, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { dom } from \"shared/lib\";\n\n/**\n * @hook Логика сброса скроллинга на каждой странице\n * @see https://medium.com/@nasir/reset-scroll-position-on-change-of-routes-react-a0bd23093dfe\n */\nexport const useResetScrollAtEveryPage = () => {\n    const history = useHistory();\n    const prev = useRef<string>();\n\n    useEffect(() => {\n        // Скроллим наверх, только если поменялась страница, НО не параметры\n        // Чтобы не сбивало с толку при постановке фильтров\n        const unlisten = history.listen((location) => {\n            if (prev.current !== location.pathname) {\n                dom.scrollToTop();\n            }\n\n            prev.current = location.pathname;\n        });\n        return () => {\n            unlisten();\n        };\n    }, [history]);\n};\n","import React, { Suspense } from \"react\";\nimport { Spin } from \"antd\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { QueryParamProvider } from \"use-query-params\";\n\n/**\n * @hoc Инициализация роутера с провайдером для работы с get-параметрами\n */\n\n// FIXME: refine type later\n// FIXME: center loader\n// eslint-disable-next-line react/display-name\nconst withRouter = (component: () => React.ReactNode) => () =>\n    (\n        <BrowserRouter>\n            <Suspense fallback={<Spin delay={300} className=\"overlay\" size=\"large\" />}>\n                <QueryParamProvider ReactRouterRoute={Route}>{component()}</QueryParamProvider>\n            </Suspense>\n        </BrowserRouter>\n    );\n\nexport default withRouter;\n","import compose from \"compose-function\";\nimport withRouter from \"./with-router\";\n\n/**\n * @hoc Инициализирующая логика приложения\n * @remark Содержит:\n * - логику инициализации роутера (withRouter)\n */\nexport const withHocs = compose(withRouter);\n","import Routing from \"pages\";\nimport { withHocs } from \"./hocs\";\nimport \"./index.scss\";\n\nconst App = () => {\n    return <Routing />;\n};\n\nexport default withHocs(App);\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"shared/rpc\";\nimport App from \"./app\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"normalize.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { useEffect } from \"react\";\nimport { PROJECT_NAME } from \"shared/config\";\n\n/**\n * @hook Задать title странице\n */\nexport const useTitle = (title: string) => {\n    useEffect(() => {\n        document.title = title;\n    }, [title]);\n};\n\nexport const useProjectTitle = (title: string) => useTitle(`${title} | ${PROJECT_NAME}`);\n\n/**\n * Временная реализация скроллинга к верху страницы\n * @remark Используется при пагинации\n * !!! FIXME: temp, resolve better later (by anchors / overflow / ref / scrollHandler / window patching / ...)\n * !!! FIXME: resolve on withAntd level? (with getParentContainer)\n */\nexport const scrollToTop = () => {\n    document.querySelector(\"html\")?.scrollTo({ top: 0, behavior: \"smooth\" });\n};\n","import { notification } from \"antd\";\n\n/**\n * NOTE: Вынес в отдельный модуль для:\n * - упрощения API (более нормализированное и привычное)\n * - для стандартизации единого placement для всех алертов\n */\nconst generateOpener =\n    (type: import(\"antd/lib/notification\").IconType) => (message: any, description?: any) => {\n        notification.open({ type, message, description, placement: \"bottomRight\" });\n    };\n\nconst error = generateOpener(\"error\");\nconst success = generateOpener(\"success\");\nconst warn = generateOpener(\"warning\");\nconst info = generateOpener(\"info\");\n\nconst alert = { error, success, warn, info };\n\nexport default alert;\n","export function capitalize(term: string) {\n    return term.charAt(0).toUpperCase() + term.slice(1);\n}\n\nexport function textOverflow(term: string, limit: number = 100) {\n    if (term.length <= limit) return term;\n    return `${term.slice(0, limit)}...`;\n}\n\nexport function slugize(term: string) {\n    return term.toLowerCase().replace(\" \", \"-\");\n}\n\nexport function unslugize(term: string) {\n    return capitalize(term).replace(\"-\", \" \");\n}\nexport function toPascalCase(term: string) {\n    if (!term.includes(\"-\")) return term;\n    return term\n        .split(\"-\")\n        .map((s) => capitalize(s))\n        .join(\"\");\n}\n\nexport function toCamelCase(term: string) {\n    const pascalCase = toPascalCase(term);\n    return pascalCase.charAt(0).toLowerCase() + pascalCase.slice(1);\n}\n","import { useState, useEffect } from \"react\";\n\nconst cache: Record<string, any> = {};\n\n// FIXME: @hardcoded @manageAccess @shareable\n// eslint-disable-next-line max-params\nexport function useRequest<T = any>(resolver: () => Promise<T>, key: string, debounce = 300) {\n    const [data, setData] = useState<T | null>(null);\n    const [loading, setLoading] = useState(true);\n    const [debouncedLoading, setDebouncedLoading] = useState(true);\n    useEffect(() => {\n        if (cache[key]) return setData(cache[key]);\n\n        setLoading(true);\n        const debounceLoading = setTimeout(() => {\n            setDebouncedLoading(true);\n        }, debounce);\n\n        resolver()\n            .then((response) => {\n                cache[key] = response;\n                setData(response);\n                clearTimeout(debounceLoading);\n                setLoading(false);\n                setDebouncedLoading(false);\n            })\n            .catch(() => {\n                setData(null);\n                clearTimeout(debounceLoading);\n                setDebouncedLoading(false);\n            });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [key]);\n\n    return { data, loading, debouncedLoading };\n}\n","export const PATHS = {\n    CODE: {\n        AUTH_HOOK: \"features/auth/hooks/index.tsx\",\n        STYLES_1: \"features/origin/styles.scss\",\n        TASK_DETAILS: \"pages/task-details/index.tsx\",\n    },\n    DOCS: {\n        // GET_STARTED: \"/docs/get-started.md\",\n        SETUP_ENV: \"/docs/setup-env.md\",\n        DEV_GUIDE: \"/docs/dev-guide.md\",\n        PAGES: \"/pages/readme.md\",\n        FEATURES: \"/features/readme.md\",\n        CODE_STYLE: \"/docs/code-style.md\",\n        STANDS: \"/STANDS.md\",\n        CODEGEN: \"/.graphql/readme.md\",\n    },\n};\n","import * as AntdIcon from \"@ant-design/icons\";\n\nimport { PATHS } from \"./paths\";\n\nconst { DOCS } = PATHS;\n\nexport const PROJECT_NAME = \"MyProj\";\n\nexport type DocSection = {\n    paths: string[];\n};\nexport const docs: Record<string, DocSection> = {\n    getStarted: {\n        paths: [DOCS.SETUP_ENV, DOCS.DEV_GUIDE],\n    },\n    conventions: {\n        paths: [DOCS.PAGES, DOCS.FEATURES, DOCS.CODE_STYLE],\n    },\n    faq: {\n        paths: [DOCS.STANDS, DOCS.CODEGEN],\n    },\n};\n\nexport const ISSUES_TYPES = {\n    LOW_COUPLING: \"lowCoupling\" as const,\n    DRY: \"dry\" as const,\n    HARDCODED: \"hardcoded\" as const,\n};\n\nexport type IconType = keyof typeof AntdIcon;\n\nexport type Issue = {\n    icon: IconType;\n    tag: typeof ISSUES_TYPES[keyof typeof ISSUES_TYPES];\n    description: string;\n    severity: number;\n};\n\nexport const issuesTypes: Issue[] = [\n    {\n        icon: \"BlockOutlined\",\n        tag: ISSUES_TYPES.LOW_COUPLING,\n        description: \"Сильная связность модулей. Будет зарезолвлено в ближайшее время\",\n        severity: 4,\n    },\n    {\n        icon: \"CopyFilled\",\n        tag: ISSUES_TYPES.DRY,\n        description: \"Повторение логики. Присмотреться к вынесению в общеиспользуемое\",\n        severity: 2,\n    },\n    {\n        icon: \"StrikethroughOutlined\",\n        tag: ISSUES_TYPES.HARDCODED,\n        description: \"Захардкоженная логика\",\n        severity: 3,\n    },\n];\n\nexport const visibleLinesDelta = 3;\n\nexport const issues = {\n    visibleLinesDelta,\n    types: issuesTypes,\n};\n\nexport const config = {\n    docs,\n    issues,\n};\n\nexport function getIssueIcon(icon: IconType) {\n    // FIXME: @temp\n    return AntdIcon[icon] as import(\"types\").IconComponent;\n}\n\nexport function findIssue(issueTag: string) {\n    return issues.types.find((type) => type.tag === issueTag);\n}\n\nexport { PATHS };\n"],"sourceRoot":""}